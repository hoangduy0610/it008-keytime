<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>