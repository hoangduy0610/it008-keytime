<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>